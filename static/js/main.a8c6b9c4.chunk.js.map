{"version":3,"sources":["components/header/style.styl","components/main/style.styl","components/header/index.js","components/main/index.js","components/footer/index.js","Redux/actions/index.js","containers/App.js","serviceWorker.js","Redux/reducers/videos.js","Redux/reducers/rootReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","esm","src","alt","Main","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","content","_this","keys","videos","length","_this$props$videos","myList","recommendations","titleList","map","item","key","id","label","title","color","myListGrids","video","onMouseOver","displayBtn","onMouseLeave","hideBtn","img","subtitle","opened","variant","size","onClick","removeFromMyList","recommendGrids","addRecommendation","cols","thickness","Component","connect","state","ownProps","dispatch","Actions","Footer","ActionType","FETCH_VIDEOS","POPULATE_VIDEOS","DISPLAY_BTN","HIDE_BTN","REMOVE_FROM_MY_LIST","ADD_RECOMMENDATION","fetchVideos","getState","fetch","then","response","json","responseBody","populateVideos","error","console","type","App","header","main","Boolean","window","location","hostname","match","initState","arguments","undefined","action","objectSpread","filter","concat","toConsumableArray","rec","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8c6b9c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/style.fbc4981e.styl\";","module.exports = __webpack_public_path__ + \"static/media/style.c72f8581.styl\";","import React from 'react';\nimport {AppBar,Toolbar,Button,Icons} from '../'\nimport './style.styl'\n\nfunction Header() {\n  return (\n    <div className=\"App-header\">\n      <AppBar>\n        <Toolbar>\n            <img className=\"logo\" src={\"https://i.ytimg.com/vi/Xfv0j9_zuN0/maxresdefault.jpg\"} alt=\"Netflix Logo\"/>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default Header;\n","import React, {Component}from 'react';\nimport './style.styl'\nimport {GridList, GridListTile, GridListTileBar, Icons, Button, IconButton, Typography, Chip, Paper, Actions, CircularProgress} from '../'\nimport {connect } from 'react-redux';\n\nclass Main extends Component {\n  constructor(props){\n    super(props)\n  }\n\n  render(){\n    let content;\n    if(Object.keys(this.props.videos).length !== 0){\n      const {myList, recommendations} = this.props.videos\n      const titleList = myList.map(item=>{\n        return (<Chip key={item.id} label={item.title} color=\"primary\"/>)\n      })\n      const myListGrids = myList.map(video=>{\n        return(\n          <GridListTile key={video.id}\n            onMouseOver={()=>{this.props.displayBtn(video.id)}}\n            onMouseLeave={()=>{this.props.hideBtn(video.id)}}\n          >\n            <img src={video.img} alt={video.title} />\n            <GridListTileBar\n              title={video.title}\n              className=\"list-tile\"\n              subtitle={\n                <Button className={\n                  this.props.opened==video.id? \"\": \"hidden\"}\n                 color=\"secondary\" variant=\"contained\" size=\"small\"\n                 onClick={()=>{this.props.removeFromMyList(video.id)}}\n                >\n                  Remove\n                </Button>\n              }\n            >\n            </GridListTileBar>\n          </GridListTile>\n        )\n      })\n\n      const recommendGrids = recommendations.map(video=>{\n        return(\n          <GridListTile key={video.id}\n            onMouseOver={()=>{this.props.displayBtn(video.id)}}\n            onMouseLeave={()=>{this.props.hideBtn(video.id)}}\n          >\n            <img src={video.img} alt={video.title} />\n            <GridListTileBar\n              title={video.title}\n              className=\"list-tile\"\n              subtitle={\n                <Button className={\n                  this.props.opened==video.id? \"\": \"hidden\"}\n                 color=\"primary\" variant=\"contained\" size=\"small\"\n                 onClick={()=>{this.props.addRecommendation(video)}}\n                >\n                  Add\n                </Button>\n              }\n            >\n            </GridListTileBar>\n          </GridListTile>\n        )\n      });\n      content = (\n        <div>\n        <div className=\"main-list\">\n          <h2>My List</h2>\n          { myList.length > 0 ?\n            <div>\n              <GridList className=\"grid-list\" cols={4}>\n                {myListGrids}\n              </GridList>\n            </div> :\n            <div>\n              You haven't added any titles to your list yet.\n            </div>\n          }\n        </div>\n        { recommendations.length !==0 ?\n          <div className=\"recommendation-list\">\n            <h2>Recommendations</h2>\n            <div>\n              <GridList className=\"grid-list\" cols={4}>\n                {recommendGrids}\n              </GridList>\n            </div>\n          </div>: null }\n        { myList.length !== 0 &&\n          <div className=\"paper\">\n            {titleList}\n          </div>}\n        </div>\n      )\n    } else{\n      content = (\n        <div className=\"spinner\">\n          <CircularProgress\n            color=\"primary\"\n            size={100}\n            thickness={3.6}\n          />\n        </div>\n      )\n    }\n    return (\n      <main className=\"App-main\">\n        {content}\n      </main>\n    )\n  }\n}\n\nconst mapStateToProps = (state,ownProps) => {\n  return {\n    videos:state.videos.videos,\n    opened:state.videos.opened\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    displayBtn: (id)=>{\n      dispatch(Actions.displayBtn(id))\n    },\n    hideBtn: (id)=>{\n      dispatch(Actions.hideBtn(id))\n    },\n    removeFromMyList: (id)=>{\n      dispatch(Actions.removeFromMyList(id))\n    },\n    addRecommendation: (video)=>{\n      dispatch(Actions.addRecommendation(video))\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <header className=\"App-footer\">\n      Footer\n    </header>\n  )\n}\n\nexport default Footer;\n","import thunk from 'redux-thunk'\n\nexport const ActionType = {\n  FETCH_VIDEOS: \"FETCH_VIDEOS\",\n  POPULATE_VIDEOS: \"POPULATE_VIDEOS\",\n  DISPLAY_BTN: \"DISPLAY_BTN\",\n  HIDE_BTN: \"HIDE_BTN\",\n  REMOVE_FROM_MY_LIST: \"REMOVE_FROM_MY_LIST\",\n  ADD_RECOMMENDATION: \"ADD_RECOMMENDATION\",\n};\n\nexport const fetchVideos= ()=>{\n  return function (dispatch,getState){\n    try{\n      // A mock url endpoint with data provided as response\n      const url= \"http://www.mocky.io/v2/5cfdea7b320000520045eced\";\n      fetch(url)\n      .then(response=>{\n        return response.json()\n      }).then(responseBody=>{\n        dispatch(populateVideos(responseBody));\n      })\n    } catch (error){\n      console.error(error);\n    }\n  };\n};\n\nexport const populateVideos = (videos) => {\n  return {\n    type: ActionType.POPULATE_VIDEOS,\n    videos\n  }\n};\n\nexport const displayBtn = (id)=>{\n  return {\n    type: ActionType.DISPLAY_BTN,\n    id\n  }\n}\n\nexport const hideBtn = () =>{\n  return{\n    type: ActionType.HIDE_BTN\n  }\n}\n\nexport const removeFromMyList = (id)=>{\n  return {\n    type: ActionType.REMOVE_FROM_MY_LIST,\n    id\n  }\n}\n\nexport const addRecommendation = (video)=>{\n  return {\n    type: ActionType.ADD_RECOMMENDATION,\n    video\n  }\n}\n","import React from 'react';\nimport {Header,Main} from '../components'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ActionType} from '../actions'\n\nconst initState = {\n  videos: {},\n  opened: false\n}\n\nconst videos = (state=initState, action)=>{\n  switch(action.type){\n    case ActionType.POPULATE_VIDEOS:\n    return {\n        ...state,\n        videos: action.videos,\n      }\n    case ActionType.DISPLAY_BTN:\n      return {\n        ...state,\n        opened: action.id\n      };\n    case ActionType.HIDE_BTN:\n      return {\n        ...state,\n        opened: false\n      };\n    /*\n      Ideally the below actions should also send a post request to the server and update the myList property in the database model, but since the end point is a mockup, there's no control over that but only to update the client side view.\n    */\n    case ActionType.REMOVE_FROM_MY_LIST:\n      return{\n        ...state,\n        videos:{\n          ...state.videos,\n          myList: state.videos.myList.filter(item=>{return item.id !== action.id})\n        },\n      };\n    case ActionType.ADD_RECOMMENDATION:\n      return{\n        ...state,\n        videos:{\n          ...state.videos,\n          myList: [...state.videos.myList, action.video],\n          recommendations: state.videos.recommendations.filter(rec=>{return rec.id !==action.video.id})\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default videos;\n","import { combineReducers } from 'redux'\nimport videos from './videos'\n\nconst rootReducer = combineReducers({\n  videos\n})\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport rootReducer from './Redux/reducers/rootReducer.js'\nimport thunk from 'redux-thunk'\nimport {fetchVideos} from './Redux/actions'\n\nconst store = createStore(rootReducer, {}, applyMiddleware(thunk));\n\nstore.dispatch(fetchVideos());\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}